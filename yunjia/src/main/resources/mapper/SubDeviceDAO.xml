<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jzhl.yunjia.mapper.SubDeviceDAO">
  <resultMap id="BaseResultMap" type="com.jzhl.yunjia.model.SubDevice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="device_id" jdbcType="INTEGER" property="deviceId" />
    <result column="device_serial" jdbcType="VARCHAR" property="deviceSerial" />
    <result column="device_custom_id" jdbcType="VARCHAR" property="deviceCustomId" />
    <result column="serial" jdbcType="VARCHAR" property="serial" />
    <result column="custom_id" jdbcType="VARCHAR" property="customId" />
    <result column="he_id" jdbcType="INTEGER" property="heId" />
    <result column="building_id" jdbcType="INTEGER" property="buildingId" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="sub_device_name" jdbcType="VARCHAR" property="subDeviceName" />
    <result column="sub_device_desc" jdbcType="VARCHAR" property="subDeviceDesc" />
    <result column="sub_device_type" jdbcType="CHAR" property="subDeviceType" />
    <result column="activ_type" jdbcType="INTEGER" property="activType" />
    <result column="activ_time" jdbcType="INTEGER" property="activTime" />
    <result column="sub_device_url" jdbcType="VARCHAR" property="subDeviceUrl" />
    <result column="online" jdbcType="CHAR" property="online" />
    <result column="face_threshold" jdbcType="INTEGER" property="faceThreshold" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="del_flag" jdbcType="CHAR" property="delFlag" />
    <result column="build_userid" jdbcType="INTEGER" property="buildUserid" />
    <result column="build_time" jdbcType="TIMESTAMP" property="buildTime" />
    <result column="update_userid" jdbcType="INTEGER" property="updateUserid" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="company_id" jdbcType="INTEGER" property="companyId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, device_id, device_serial, device_custom_id, serial, custom_id, he_id, building_id, 
    unit_id, sub_device_name, sub_device_desc, sub_device_type, activ_type, activ_time, 
    sub_device_url, `online`, face_threshold, `status`, del_flag, build_userid, build_time, 
    update_userid, update_time, remark, company_id
  </sql>
  <select id="selectByExample" parameterType="com.jzhl.yunjia.model.SubDeviceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from door_sub_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from door_sub_device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from door_sub_device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jzhl.yunjia.model.SubDeviceExample">
    delete from door_sub_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jzhl.yunjia.model.SubDevice">
    insert into door_sub_device (id, device_id, device_serial, 
      device_custom_id, serial, custom_id, 
      he_id, building_id, unit_id, 
      sub_device_name, sub_device_desc, sub_device_type, 
      activ_type, activ_time, sub_device_url, 
      `online`, face_threshold, `status`, 
      del_flag, build_userid, build_time, 
      update_userid, update_time, remark, 
      company_id)
    values (#{id,jdbcType=INTEGER}, #{deviceId,jdbcType=INTEGER}, #{deviceSerial,jdbcType=VARCHAR}, 
      #{deviceCustomId,jdbcType=VARCHAR}, #{serial,jdbcType=VARCHAR}, #{customId,jdbcType=VARCHAR}, 
      #{heId,jdbcType=INTEGER}, #{buildingId,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, 
      #{subDeviceName,jdbcType=VARCHAR}, #{subDeviceDesc,jdbcType=VARCHAR}, #{subDeviceType,jdbcType=CHAR}, 
      #{activType,jdbcType=INTEGER}, #{activTime,jdbcType=INTEGER}, #{subDeviceUrl,jdbcType=VARCHAR}, 
      #{online,jdbcType=CHAR}, #{faceThreshold,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, 
      #{delFlag,jdbcType=CHAR}, #{buildUserid,jdbcType=INTEGER}, #{buildTime,jdbcType=TIMESTAMP}, 
      #{updateUserid,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{companyId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jzhl.yunjia.model.SubDevice">
    insert into door_sub_device
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="deviceSerial != null">
        device_serial,
      </if>
      <if test="deviceCustomId != null">
        device_custom_id,
      </if>
      <if test="serial != null">
        serial,
      </if>
      <if test="customId != null">
        custom_id,
      </if>
      <if test="heId != null">
        he_id,
      </if>
      <if test="buildingId != null">
        building_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="subDeviceName != null">
        sub_device_name,
      </if>
      <if test="subDeviceDesc != null">
        sub_device_desc,
      </if>
      <if test="subDeviceType != null">
        sub_device_type,
      </if>
      <if test="activType != null">
        activ_type,
      </if>
      <if test="activTime != null">
        activ_time,
      </if>
      <if test="subDeviceUrl != null">
        sub_device_url,
      </if>
      <if test="online != null">
        `online`,
      </if>
      <if test="faceThreshold != null">
        face_threshold,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="buildUserid != null">
        build_userid,
      </if>
      <if test="buildTime != null">
        build_time,
      </if>
      <if test="updateUserid != null">
        update_userid,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="deviceSerial != null">
        #{deviceSerial,jdbcType=VARCHAR},
      </if>
      <if test="deviceCustomId != null">
        #{deviceCustomId,jdbcType=VARCHAR},
      </if>
      <if test="serial != null">
        #{serial,jdbcType=VARCHAR},
      </if>
      <if test="customId != null">
        #{customId,jdbcType=VARCHAR},
      </if>
      <if test="heId != null">
        #{heId,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null">
        #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="subDeviceName != null">
        #{subDeviceName,jdbcType=VARCHAR},
      </if>
      <if test="subDeviceDesc != null">
        #{subDeviceDesc,jdbcType=VARCHAR},
      </if>
      <if test="subDeviceType != null">
        #{subDeviceType,jdbcType=CHAR},
      </if>
      <if test="activType != null">
        #{activType,jdbcType=INTEGER},
      </if>
      <if test="activTime != null">
        #{activTime,jdbcType=INTEGER},
      </if>
      <if test="subDeviceUrl != null">
        #{subDeviceUrl,jdbcType=VARCHAR},
      </if>
      <if test="online != null">
        #{online,jdbcType=CHAR},
      </if>
      <if test="faceThreshold != null">
        #{faceThreshold,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=CHAR},
      </if>
      <if test="buildUserid != null">
        #{buildUserid,jdbcType=INTEGER},
      </if>
      <if test="buildTime != null">
        #{buildTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jzhl.yunjia.model.SubDeviceExample" resultType="java.lang.Long">
    select count(*) from door_sub_device
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update door_sub_device
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=INTEGER},
      </if>
      <if test="record.deviceSerial != null">
        device_serial = #{record.deviceSerial,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceCustomId != null">
        device_custom_id = #{record.deviceCustomId,jdbcType=VARCHAR},
      </if>
      <if test="record.serial != null">
        serial = #{record.serial,jdbcType=VARCHAR},
      </if>
      <if test="record.customId != null">
        custom_id = #{record.customId,jdbcType=VARCHAR},
      </if>
      <if test="record.heId != null">
        he_id = #{record.heId,jdbcType=INTEGER},
      </if>
      <if test="record.buildingId != null">
        building_id = #{record.buildingId,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.subDeviceName != null">
        sub_device_name = #{record.subDeviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.subDeviceDesc != null">
        sub_device_desc = #{record.subDeviceDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.subDeviceType != null">
        sub_device_type = #{record.subDeviceType,jdbcType=CHAR},
      </if>
      <if test="record.activType != null">
        activ_type = #{record.activType,jdbcType=INTEGER},
      </if>
      <if test="record.activTime != null">
        activ_time = #{record.activTime,jdbcType=INTEGER},
      </if>
      <if test="record.subDeviceUrl != null">
        sub_device_url = #{record.subDeviceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.online != null">
        `online` = #{record.online,jdbcType=CHAR},
      </if>
      <if test="record.faceThreshold != null">
        face_threshold = #{record.faceThreshold,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=CHAR},
      </if>
      <if test="record.buildUserid != null">
        build_userid = #{record.buildUserid,jdbcType=INTEGER},
      </if>
      <if test="record.buildTime != null">
        build_time = #{record.buildTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserid != null">
        update_userid = #{record.updateUserid,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update door_sub_device
    set id = #{record.id,jdbcType=INTEGER},
      device_id = #{record.deviceId,jdbcType=INTEGER},
      device_serial = #{record.deviceSerial,jdbcType=VARCHAR},
      device_custom_id = #{record.deviceCustomId,jdbcType=VARCHAR},
      serial = #{record.serial,jdbcType=VARCHAR},
      custom_id = #{record.customId,jdbcType=VARCHAR},
      he_id = #{record.heId,jdbcType=INTEGER},
      building_id = #{record.buildingId,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      sub_device_name = #{record.subDeviceName,jdbcType=VARCHAR},
      sub_device_desc = #{record.subDeviceDesc,jdbcType=VARCHAR},
      sub_device_type = #{record.subDeviceType,jdbcType=CHAR},
      activ_type = #{record.activType,jdbcType=INTEGER},
      activ_time = #{record.activTime,jdbcType=INTEGER},
      sub_device_url = #{record.subDeviceUrl,jdbcType=VARCHAR},
      `online` = #{record.online,jdbcType=CHAR},
      face_threshold = #{record.faceThreshold,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=CHAR},
      del_flag = #{record.delFlag,jdbcType=CHAR},
      build_userid = #{record.buildUserid,jdbcType=INTEGER},
      build_time = #{record.buildTime,jdbcType=TIMESTAMP},
      update_userid = #{record.updateUserid,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jzhl.yunjia.model.SubDevice">
    update door_sub_device
    <set>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=INTEGER},
      </if>
      <if test="deviceSerial != null">
        device_serial = #{deviceSerial,jdbcType=VARCHAR},
      </if>
      <if test="deviceCustomId != null">
        device_custom_id = #{deviceCustomId,jdbcType=VARCHAR},
      </if>
      <if test="serial != null">
        serial = #{serial,jdbcType=VARCHAR},
      </if>
      <if test="customId != null">
        custom_id = #{customId,jdbcType=VARCHAR},
      </if>
      <if test="heId != null">
        he_id = #{heId,jdbcType=INTEGER},
      </if>
      <if test="buildingId != null">
        building_id = #{buildingId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="subDeviceName != null">
        sub_device_name = #{subDeviceName,jdbcType=VARCHAR},
      </if>
      <if test="subDeviceDesc != null">
        sub_device_desc = #{subDeviceDesc,jdbcType=VARCHAR},
      </if>
      <if test="subDeviceType != null">
        sub_device_type = #{subDeviceType,jdbcType=CHAR},
      </if>
      <if test="activType != null">
        activ_type = #{activType,jdbcType=INTEGER},
      </if>
      <if test="activTime != null">
        activ_time = #{activTime,jdbcType=INTEGER},
      </if>
      <if test="subDeviceUrl != null">
        sub_device_url = #{subDeviceUrl,jdbcType=VARCHAR},
      </if>
      <if test="online != null">
        `online` = #{online,jdbcType=CHAR},
      </if>
      <if test="faceThreshold != null">
        face_threshold = #{faceThreshold,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=CHAR},
      </if>
      <if test="buildUserid != null">
        build_userid = #{buildUserid,jdbcType=INTEGER},
      </if>
      <if test="buildTime != null">
        build_time = #{buildTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null">
        update_userid = #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jzhl.yunjia.model.SubDevice">
    update door_sub_device
    set device_id = #{deviceId,jdbcType=INTEGER},
      device_serial = #{deviceSerial,jdbcType=VARCHAR},
      device_custom_id = #{deviceCustomId,jdbcType=VARCHAR},
      serial = #{serial,jdbcType=VARCHAR},
      custom_id = #{customId,jdbcType=VARCHAR},
      he_id = #{heId,jdbcType=INTEGER},
      building_id = #{buildingId,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      sub_device_name = #{subDeviceName,jdbcType=VARCHAR},
      sub_device_desc = #{subDeviceDesc,jdbcType=VARCHAR},
      sub_device_type = #{subDeviceType,jdbcType=CHAR},
      activ_type = #{activType,jdbcType=INTEGER},
      activ_time = #{activTime,jdbcType=INTEGER},
      sub_device_url = #{subDeviceUrl,jdbcType=VARCHAR},
      `online` = #{online,jdbcType=CHAR},
      face_threshold = #{faceThreshold,jdbcType=INTEGER},
      `status` = #{status,jdbcType=CHAR},
      del_flag = #{delFlag,jdbcType=CHAR},
      build_userid = #{buildUserid,jdbcType=INTEGER},
      build_time = #{buildTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>